//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SimplePAG.g4 by ANTLR 4.2.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class SimplePAGLexer : Lexer {
	public const int
		T__10=1, T__9=2, T__8=3, T__7=4, T__6=5, T__5=6, T__4=7, T__3=8, T__2=9, 
		T__1=10, T__0=11, INTEGER=12, ID=13, WS=14;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"'#rules'", "'()'", "'\"'", "'('", "')'", "':'", "';'", "','", "'|'", 
		"'::-'", "'.'", "INTEGER", "ID", "WS"
	};
	public static readonly string[] ruleNames = {
		"T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", 
		"T__1", "T__0", "INTEGER", "ID", "WS"
	};


	public SimplePAGLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "SimplePAG.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x10R\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3"+
		"\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3"+
		"\v\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\r\a\r\x41\n\r\f\r\xE\r\x44\v\r\x5"+
		"\r\x46\n\r\x3\xE\x3\xE\a\xEJ\n\xE\f\xE\xE\xEM\v\xE\x3\xF\x3\xF\x3\xF\x3"+
		"\xF\x2\x2\x2\x10\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2"+
		"\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x3\x2\x5\x4\x2\x43\\\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x5\x2\v\f\xF"+
		"\xF\"\"T\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3"+
		"\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3"+
		"\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2"+
		"\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x3\x1F\x3\x2\x2"+
		"\x2\x5&\x3\x2\x2\x2\a)\x3\x2\x2\x2\t+\x3\x2\x2\x2\v-\x3\x2\x2\x2\r/\x3"+
		"\x2\x2\x2\xF\x31\x3\x2\x2\x2\x11\x33\x3\x2\x2\x2\x13\x35\x3\x2\x2\x2\x15"+
		"\x37\x3\x2\x2\x2\x17;\x3\x2\x2\x2\x19\x45\x3\x2\x2\x2\x1BG\x3\x2\x2\x2"+
		"\x1DN\x3\x2\x2\x2\x1F \a%\x2\x2 !\at\x2\x2!\"\aw\x2\x2\"#\an\x2\x2#$\a"+
		"g\x2\x2$%\au\x2\x2%\x4\x3\x2\x2\x2&\'\a*\x2\x2\'(\a+\x2\x2(\x6\x3\x2\x2"+
		"\x2)*\a$\x2\x2*\b\x3\x2\x2\x2+,\a*\x2\x2,\n\x3\x2\x2\x2-.\a+\x2\x2.\f"+
		"\x3\x2\x2\x2/\x30\a<\x2\x2\x30\xE\x3\x2\x2\x2\x31\x32\a=\x2\x2\x32\x10"+
		"\x3\x2\x2\x2\x33\x34\a.\x2\x2\x34\x12\x3\x2\x2\x2\x35\x36\a~\x2\x2\x36"+
		"\x14\x3\x2\x2\x2\x37\x38\a<\x2\x2\x38\x39\a<\x2\x2\x39:\a/\x2\x2:\x16"+
		"\x3\x2\x2\x2;<\a\x30\x2\x2<\x18\x3\x2\x2\x2=\x46\a\x32\x2\x2>\x42\x4\x33"+
		";\x2?\x41\x4\x32;\x2@?\x3\x2\x2\x2\x41\x44\x3\x2\x2\x2\x42@\x3\x2\x2\x2"+
		"\x42\x43\x3\x2\x2\x2\x43\x46\x3\x2\x2\x2\x44\x42\x3\x2\x2\x2\x45=\x3\x2"+
		"\x2\x2\x45>\x3\x2\x2\x2\x46\x1A\x3\x2\x2\x2GK\t\x2\x2\x2HJ\t\x3\x2\x2"+
		"IH\x3\x2\x2\x2JM\x3\x2\x2\x2KI\x3\x2\x2\x2KL\x3\x2\x2\x2L\x1C\x3\x2\x2"+
		"\x2MK\x3\x2\x2\x2NO\t\x4\x2\x2OP\x3\x2\x2\x2PQ\b\xF\x2\x2Q\x1E\x3\x2\x2"+
		"\x2\x6\x2\x42\x45K\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
